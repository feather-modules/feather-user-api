openapi: 3.1.0
info:
  title: Feather - User API
  description: 'The entire API definition for the Feather User API service.

    (Generated on: 31 Mar 2024 at 17:38:24)'
  contact:
    name: Binary Birds
    url: https://binarybirds.com
    email: info@binarybirds.com
  version: 1.0.0
tags:
- name: System - Permission
  description: ''
- name: System - Variable
  description: ''
- name: User - Account
  description: ''
- name: User - Auth
  description: ''
- name: User - Password
  description: ''
- name: User - Push
  description: ''
- name: User - Register
  description: ''
- name: User - Role
  description: ''
servers:
- url: http://localhost:8080
  description: dev
paths:
  /system/permissions/{permissionKey}:
    parameters:
    - $ref: '#/components/parameters/SystemPermissionKey'
    get:
      tags:
      - System - Permission
      summary: System permission details
      description: Get the details of a system permission
      operationId: detailSystemPermission
      responses:
        200:
          $ref: '#/components/responses/SystemPermissionDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
      security:
      - FeatherCoreBearerToken: []
    put:
      tags:
      - System - Permission
      summary: Update a system permission
      description: Updates a system permission
      operationId: updateSystemPermission
      parameters:
      - $ref: '#/components/parameters/SystemPermissionKey'
      requestBody:
        description: Update request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemPermissionUpdate'
        required: true
      responses:
        200:
          $ref: '#/components/responses/SystemPermissionDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
    patch:
      tags:
      - System - Permission
      summary: Patch a System Permission
      description: Patch a given System Permission
      operationId: patchSystemPermission
      parameters:
      - $ref: '#/components/parameters/SystemPermissionKey'
      requestBody:
        description: Patch request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemPermissionPatch'
        required: true
      responses:
        200:
          $ref: '#/components/responses/SystemPermissionDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /system/permissions:
    get:
      tags:
      - System - Permission
      summary: List system permissions
      description: List available system permissions
      operationId: listSystemPermission
      parameters:
      - $ref: '#/components/parameters/SystemPermissionListSort'
      - $ref: '#/components/parameters/FeatherCoreListSearch'
      - $ref: '#/components/parameters/FeatherCoreListPageSize'
      - $ref: '#/components/parameters/FeatherCoreListPageIndex'
      - $ref: '#/components/parameters/FeatherCoreListOrder'
      responses:
        200:
          $ref: '#/components/responses/SystemPermissionList'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
      security:
      - FeatherCoreBearerToken: []
    post:
      tags:
      - System - Permission
      summary: Create a system permission
      description: Creates a new system permission
      operationId: createSystemPermission
      requestBody:
        description: Create request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemPermissionCreate'
        required: true
      responses:
        200:
          $ref: '#/components/responses/SystemPermissionDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
    delete:
      tags:
      - System - Permission
      summary: Bulk delete system permissions
      description: Removes multiple system permissions at once
      operationId: bulkDeleteSystemPermission
      requestBody:
        description: Bulk delete request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemPermissionBulkDelete'
        required: true
      responses:
        204:
          $ref: '#/components/responses/FeatherCoreNoContent'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /system/variables/{key}:
    parameters:
    - $ref: '#/components/parameters/SystemVariableKey'
    get:
      tags:
      - System - Variable
      summary: System variable details
      description: Get the details of a system variable
      operationId: getSystemVariable
      responses:
        200:
          $ref: '#/components/responses/SystemVariableDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
      security:
      - FeatherCoreBearerToken: []
    put:
      tags:
      - System - Variable
      summary: Update a system variable
      description: Updates a system variable using an identifier
      operationId: updateSystemVariable
      requestBody:
        description: Update request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemVariableUpdate'
        required: true
      responses:
        200:
          $ref: '#/components/responses/SystemVariableDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
    patch:
      tags:
      - System - Variable
      summary: Patch a system variable
      description: Patches a system variable using an identifier
      operationId: patchSystemVariable
      requestBody:
        description: Patch request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemVariablePatch'
        required: true
      responses:
        200:
          $ref: '#/components/responses/SystemVariableDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /system/variables:
    get:
      tags:
      - System - Variable
      summary: List system variables
      description: List available system variables
      operationId: listSystemVariable
      parameters:
      - $ref: '#/components/parameters/SystemVariableListSort'
      - $ref: '#/components/parameters/FeatherCoreListSearch'
      - $ref: '#/components/parameters/FeatherCoreListPageSize'
      - $ref: '#/components/parameters/FeatherCoreListPageIndex'
      - $ref: '#/components/parameters/FeatherCoreListOrder'
      responses:
        200:
          $ref: '#/components/responses/SystemVariableList'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
      security:
      - FeatherCoreBearerToken: []
    post:
      tags:
      - System - Variable
      summary: Create a system variable
      description: Creates a new system variable
      operationId: createSystemVariable
      requestBody:
        description: Create request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemVariableCreate'
        required: true
      responses:
        200:
          $ref: '#/components/responses/SystemVariableDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
    delete:
      tags:
      - System - Variable
      summary: Bulk delete system variables
      description: Bulk delete system variables using identifiers
      operationId: bulkDeleteSystemVariable
      requestBody:
        description: Bulk delete request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemVariableBulkDelete'
        required: true
      responses:
        204:
          $ref: '#/components/responses/FeatherCoreNoContent'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /user/accounts/{accountId}:
    parameters:
    - $ref: '#/components/parameters/UserAccountId'
    get:
      tags:
      - User - Account
      summary: User Account details
      description: Get the details of a User Account
      operationId: detailUserAccount
      responses:
        200:
          $ref: '#/components/responses/UserAccountDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
      security:
      - FeatherCoreBearerToken: []
    put:
      tags:
      - User - Account
      summary: Update a User Account
      description: Updates a User Account
      operationId: updateUserAccount
      requestBody:
        description: Update request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountUpdate'
        required: true
      responses:
        200:
          $ref: '#/components/responses/UserAccountDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
    patch:
      tags:
      - User - Account
      summary: Patch a User Account
      description: Patch a given User Account
      operationId: patchUserAccount
      requestBody:
        description: Patch request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountPatch'
        required: true
      responses:
        200:
          $ref: '#/components/responses/UserAccountDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /user/accounts:
    get:
      tags:
      - User - Account
      summary: List User Accounts
      description: List available User Accounts
      operationId: listUserAccount
      parameters:
      - $ref: '#/components/parameters/UserAccountListSort'
      - $ref: '#/components/parameters/FeatherCoreListSearch'
      - $ref: '#/components/parameters/FeatherCoreListPageSize'
      - $ref: '#/components/parameters/FeatherCoreListPageIndex'
      - $ref: '#/components/parameters/FeatherCoreListOrder'
      responses:
        200:
          $ref: '#/components/responses/UserAccountList'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
      security:
      - FeatherCoreBearerToken: []
    post:
      tags:
      - User - Account
      summary: Create a User Account
      description: Creates a new User Account
      operationId: createUserAccount
      requestBody:
        description: Create request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountCreate'
        required: true
      responses:
        200:
          $ref: '#/components/responses/UserAccountDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
    delete:
      tags:
      - User - Account
      summary: Bulk delete User Accounts
      description: Removes multiple User Accounts at once
      operationId: bulkDeleteUserAccount
      requestBody:
        description: Bulk delete request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountBulkDelete'
        required: true
      responses:
        204:
          $ref: '#/components/responses/FeatherCoreNoContent'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /user/accounts/me:
    get:
      tags:
      - User - Account
      summary: Current user account details
      description: Get the details of the currently logged in user account based on
        the auth token.
      operationId: meUserAccount
      responses:
        200:
          $ref: '#/components/responses/UserAccountDetail'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
      security:
      - FeatherCoreBearerToken: []
  /user/auth:
    post:
      tags:
      - User - Auth
      summary: Sign in
      description: Sign in with an existing user account
      operationId: postUserAuth
      requestBody:
        description: Sign in request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthRequest'
        required: true
      responses:
        200:
          $ref: '#/components/responses/UserAuthResponse'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security: []
    delete:
      tags:
      - User - Auth
      summary: Sign out
      description: Sign out using an existing token
      operationId: deleteUserAuth
      responses:
        204:
          $ref: '#/components/responses/FeatherCoreNoContent'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
      security:
      - FeatherCoreBearerToken: []
  /user/password/reset:
    post:
      tags:
      - User - Password
      summary: Initiate a reset password flow
      description: Send out a reset password email with a password reset token if
        the given email has an associated user account.
      operationId: resetUserPassword
      requestBody:
        description: Reset password request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordReset'
        required: true
      responses:
        204:
          $ref: '#/components/responses/FeatherCoreNoContent'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security: []
  /user/password:
    post:
      tags:
      - User - Password
      summary: Set new password
      description: Set a new password for the user account using a password reset
        token.
      operationId: setUserPassword
      parameters:
      - $ref: '#/components/parameters/UserPasswordToken'
      requestBody:
        description: Set new password request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordSet'
        required: true
      responses:
        204:
          $ref: '#/components/responses/FeatherCoreNoContent'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security: []
  /user/push/tokens/{pushId}:
    parameters:
    - $ref: '#/components/parameters/UserPushId'
    put:
      tags:
      - User - Push
      summary: Updates a push token object
      description: Updates a push token object
      operationId: updateUserPush
      parameters:
      - $ref: '#/components/parameters/UserPushId'
      requestBody:
        description: Update push token request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPushUpdate'
        required: true
      responses:
        200:
          $ref: '#/components/responses/UserPushUpdate'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
    delete:
      tags:
      - User - Push
      summary: Delete a push token object
      description: Delete a push token object
      operationId: deleteUserPush
      parameters:
      - $ref: '#/components/parameters/UserPushId'
      responses:
        204:
          $ref: '#/components/responses/FeatherCoreNoContent'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
      security:
      - FeatherCoreBearerToken: []
  /user/push/tokens:
    post:
      tags:
      - User - Push
      summary: Create a push token object
      description: Create a push token object
      operationId: createUserPush
      requestBody:
        description: Create push token request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPushCreate'
        required: true
      responses:
        200:
          $ref: '#/components/responses/UserPushCreate'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /user/register:
    post:
      tags:
      - User - Register
      summary: Register account
      description: Register a new user account
      operationId: postUserRegister
      parameters:
      - $ref: '#/components/parameters/UserRegisterToken'
      requestBody:
        description: Register account request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountCreate'
        required: true
      responses:
        200:
          $ref: '#/components/responses/UserRegisterPost'
      security: []
  /user/roles/{roleKey}:
    parameters:
    - $ref: '#/components/parameters/UserRoleKey'
    get:
      tags:
      - User - Role
      summary: User Role details
      description: Get the details of a User Role
      operationId: detailUserRole
      responses:
        200:
          $ref: '#/components/responses/UserRoleDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
      security:
      - FeatherCoreBearerToken: []
    put:
      tags:
      - User - Role
      summary: Update a User Role
      description: Updates a User Role
      operationId: updateUserRole
      parameters:
      - $ref: '#/components/parameters/UserRoleKey'
      requestBody:
        description: Update request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleUpdate'
        required: true
      responses:
        200:
          $ref: '#/components/responses/UserRoleDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
    patch:
      tags:
      - User - Role
      summary: Patch a User Role
      description: Patch a given User Role
      operationId: patchUserRole
      parameters:
      - $ref: '#/components/parameters/UserRoleKey'
      requestBody:
        description: Patch request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRolePatch'
        required: true
      responses:
        200:
          $ref: '#/components/responses/UserRoleDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
  /user/roles:
    get:
      tags:
      - User - Role
      summary: List User Roles
      description: List available User Roles
      operationId: listUserRole
      parameters:
      - $ref: '#/components/parameters/UserRoleListSort'
      - $ref: '#/components/parameters/FeatherCoreListSearch'
      - $ref: '#/components/parameters/FeatherCoreListPageSize'
      - $ref: '#/components/parameters/FeatherCoreListPageIndex'
      - $ref: '#/components/parameters/FeatherCoreListOrder'
      responses:
        200:
          $ref: '#/components/responses/UserRoleList'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
      security:
      - FeatherCoreBearerToken: []
    post:
      tags:
      - User - Role
      summary: Create a User Role
      description: Creates a new User Role
      operationId: createUserRole
      requestBody:
        description: Create request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleCreate'
        required: true
      responses:
        200:
          $ref: '#/components/responses/UserRoleDetail'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
    delete:
      tags:
      - User - Role
      summary: Bulk delete User Roles
      description: Removes multiple User Roles at once
      operationId: bulkDeleteUserRole
      requestBody:
        description: Bulk delete request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleBulkDelete'
        required: true
      responses:
        204:
          $ref: '#/components/responses/FeatherCoreNoContent'
        400:
          $ref: '#/components/responses/FeatherCoreBadRequest'
        401:
          $ref: '#/components/responses/FeatherCoreUnauthorized'
        403:
          $ref: '#/components/responses/FeatherCoreForbidden'
        404:
          $ref: '#/components/responses/FeatherCoreNotFound'
        415:
          $ref: '#/components/responses/FeatherCoreUnsupportedMediaType'
        422:
          $ref: '#/components/responses/FeatherCoreUnprocessableContent'
      security:
      - FeatherCoreBearerToken: []
components:
  schemas:
    FeatherCoreBadRequestError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreBadRequestErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreBadRequestErrorKey:
      type: string
      enum:
      - missingRequestBody
      - invalidRequestBody
      description: You can use this key for translation purposes.
      examples:
      - missingRequestBody
      - invalidRequestBody
    FeatherCoreConflictError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreConflictErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreConflictErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreCreatedAt:
      type: string
      format: date-time
      description: Object creation date
      examples:
      - '2023-02-10 09:20:15'
    FeatherCoreErrorMessage:
      type: string
      description: The original error message provided by the system.
      examples:
      - Something went wrong with the request.
    FeatherCoreForbiddenError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreForbiddenErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreForbiddenErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreGoneError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreGoneErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreGoneErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreHeadersContentLength:
      type: integer
      description: Content length
    FeatherCoreInternalServerErrorError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreInternalServerErrorErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreInternalServerErrorErrorKey:
      type: string
      description: The key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreListCount:
      type: integer
      description: Total elements
      examples:
      - 42
    FeatherCoreListOrder:
      type: string
      enum:
      - asc
      - desc
      default: asc
      description: Order of the list (ascending or descending).
      examples:
      - asc
      - desc
    FeatherCoreListPage:
      type: object
      description: Page properties
      properties:
        size:
          $ref: '#/components/schemas/FeatherCoreListPageSize'
        index:
          $ref: '#/components/schemas/FeatherCoreListPageIndex'
      required:
      - size
      - index
    FeatherCoreListPageIndex:
      type: integer
      default: 0
      description: Page index
      examples:
      - 0
    FeatherCoreListPageSize:
      type: integer
      default: 50
      description: Page size
      examples:
      - 10
    FeatherCoreListSearch:
      type: string
      description: Value of the search term.
      examples:
      - foo
    FeatherCoreMethodNotAllowedError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreMethodNotAllowedErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreMethodNotAllowedErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreNotAcceptableError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreNotAcceptableErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreNotAcceptableErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreNotFoundError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreNotFoundErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreNotFoundErrorKey:
      type: string
      description: The system key of the related object.
      examples:
      - module.model
      - foo.bar
    FeatherCoreUnauthorizedError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreUnauthorizedErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreUnauthorizedErrorKey:
      type: string
      const: invalidUserToken
      description: You can use this key for translation purposes.
      examples:
      - invalidUserToken
    FeatherCoreUnprocessableContentError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreUnprocessableContentErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
        failures:
          $ref: '#/components/schemas/FeatherCoreUnprocessableContentErrorFailure'
      required:
      - key
      - message
      - failures
    FeatherCoreUnprocessableContentErrorFailure:
      type: array
      description: ''
      items:
        $ref: '#/components/schemas/FeatherCoreUnprocessableContentErrorFailureDetail'
      maxItems: 1000
      minItems: 0
    FeatherCoreUnprocessableContentErrorFailureDetail:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreUnprocessableContentErrorFailureDetailKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreUnprocessableContentErrorFailureDetailKey:
      type: string
      description: Related field key for the error detail.
      examples:
      - email
      - password
      - coordinate
      - coordinate.latitude
      - coordinate.longitude
    FeatherCoreUnprocessableContentErrorKey:
      type: string
      const: validation
      description: You can use this key for translation purposes.
      examples:
      - validation
    FeatherCoreUnsupportedMediaTypeError:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/FeatherCoreUnsupportedMediaTypeErrorKey'
        message:
          $ref: '#/components/schemas/FeatherCoreErrorMessage'
      required:
      - key
      - message
    FeatherCoreUnsupportedMediaTypeErrorKey:
      type: string
      description: You can use this key for translation purposes.
      examples:
      - application/json
      - text/html
    FeatherCoreUpdatedAt:
      type: string
      format: date-time
      description: Last update for the object
      examples:
      - '2023-02-10 09:20:15'
    SystemPermissionBulkDelete:
      type: array
      description: The list of the keys to be deleted.
      items:
        $ref: '#/components/schemas/SystemPermissionKey'
      maxItems: 1000
      minItems: 0
    SystemPermissionCreate:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemPermissionKey'
        name:
          $ref: '#/components/schemas/SystemPermissionName'
        notes:
          $ref: '#/components/schemas/SystemPermissionNotes'
      required:
      - key
      - name
    SystemPermissionDetail:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemPermissionKey'
        name:
          $ref: '#/components/schemas/SystemPermissionName'
        notes:
          $ref: '#/components/schemas/SystemPermissionNotes'
      required:
      - key
      - name
    SystemPermissionKey:
      type: string
      description: Key of the permission
      examples:
      - namespace.context.action
    SystemPermissionList:
      type: object
      description: Permission list
      properties:
        items:
          $ref: '#/components/schemas/SystemPermissionListItems'
        sort:
          $ref: '#/components/schemas/SystemPermissionListSort'
        order:
          $ref: '#/components/schemas/FeatherCoreListOrder'
        search:
          $ref: '#/components/schemas/FeatherCoreListSearch'
        page:
          $ref: '#/components/schemas/FeatherCoreListPage'
        count:
          $ref: '#/components/schemas/FeatherCoreListCount'
      required:
      - items
      - page
      - count
    SystemPermissionListItem:
      type: object
      description: Permission list item
      properties:
        key:
          $ref: '#/components/schemas/SystemPermissionKey'
        name:
          $ref: '#/components/schemas/SystemPermissionName'
      required:
      - key
      - name
    SystemPermissionListItems:
      type: array
      description: Permission list items
      items:
        $ref: '#/components/schemas/SystemPermissionListItem'
      maxItems: 1000
      minItems: 0
    SystemPermissionListSort:
      type: string
      enum:
      - key
      - name
      description: The sort key for the list
    SystemPermissionName:
      type: string
      description: Name of the permission
      examples:
      - Name of the permission
    SystemPermissionNotes:
      type: string
      description: Description of the permission
      examples:
      - Notes for the permission
    SystemPermissionPatch:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemPermissionKey'
        name:
          $ref: '#/components/schemas/SystemPermissionName'
        notes:
          $ref: '#/components/schemas/SystemPermissionNotes'
    SystemPermissionReference:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemPermissionKey'
        name:
          $ref: '#/components/schemas/SystemPermissionName'
      required:
      - key
      - name
    SystemPermissionUpdate:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemPermissionKey'
        name:
          $ref: '#/components/schemas/SystemPermissionName'
        notes:
          $ref: '#/components/schemas/SystemPermissionNotes'
      required:
      - key
      - name
    SystemVariableBulkDelete:
      type: array
      description: The list of the keys to be deleted.
      items:
        $ref: '#/components/schemas/SystemVariableKey'
      maxItems: 1000
      minItems: 0
    SystemVariableCreate:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemVariableKey'
        value:
          $ref: '#/components/schemas/SystemVariableValue'
        name:
          $ref: '#/components/schemas/SystemVariableName'
        notes:
          $ref: '#/components/schemas/SystemVariableNotes'
      required:
      - key
      - value
    SystemVariableDetail:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemVariableKey'
        value:
          $ref: '#/components/schemas/SystemVariableValue'
        name:
          $ref: '#/components/schemas/SystemVariableName'
        notes:
          $ref: '#/components/schemas/SystemVariableNotes'
      required:
      - key
      - value
    SystemVariableKey:
      type: string
      description: Key of the system variable
      examples:
      - system.email.address
    SystemVariableList:
      type: object
      description: System varaible list
      properties:
        items:
          $ref: '#/components/schemas/SystemVariableListItems'
        sort:
          $ref: '#/components/schemas/SystemVariableListSort'
        order:
          $ref: '#/components/schemas/FeatherCoreListOrder'
        search:
          $ref: '#/components/schemas/FeatherCoreListSearch'
        page:
          $ref: '#/components/schemas/FeatherCoreListPage'
        count:
          $ref: '#/components/schemas/FeatherCoreListCount'
      required:
      - items
      - page
      - count
    SystemVariableListItem:
      type: object
      description: System variable list item
      properties:
        key:
          $ref: '#/components/schemas/SystemVariableKey'
        value:
          $ref: '#/components/schemas/SystemVariableValue'
        name:
          $ref: '#/components/schemas/SystemVariableName'
      required:
      - key
      - value
    SystemVariableListItems:
      type: array
      description: System variable list items
      items:
        $ref: '#/components/schemas/SystemVariableListItem'
      maxItems: 1000
      minItems: 0
    SystemVariableListSort:
      type: string
      enum:
      - key
      - name
      - value
      description: The sort key for the list
    SystemVariableName:
      type: string
      description: Name of the system variable
      examples:
      - Sender address
    SystemVariableNotes:
      type: string
      description: Notes of the system variable
      examples:
      - Any notes here
    SystemVariablePatch:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemVariableKey'
        value:
          $ref: '#/components/schemas/SystemVariableValue'
        name:
          $ref: '#/components/schemas/SystemVariableName'
        notes:
          $ref: '#/components/schemas/SystemVariableNotes'
    SystemVariableReference:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemVariableKey'
        value:
          $ref: '#/components/schemas/SystemVariableValue'
      required:
      - key
      - value
    SystemVariableUpdate:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/SystemVariableKey'
        value:
          $ref: '#/components/schemas/SystemVariableValue'
        name:
          $ref: '#/components/schemas/SystemVariableName'
        notes:
          $ref: '#/components/schemas/SystemVariableNotes'
      required:
      - key
      - value
    SystemVariableValue:
      type: string
      description: Value of the system variable
      examples:
      - something@mail.com
    UserAccountBulkDelete:
      type: array
      description: The list of the ids to be deleted.
      items:
        $ref: '#/components/schemas/UserAccountId'
      maxItems: 1000
      minItems: 0
    UserAccountCreate:
      type: object
      description: ''
      properties:
        email:
          $ref: '#/components/schemas/UserAccountEmail'
        password:
          $ref: '#/components/schemas/UserAccountPassword'
        roleKeys:
          $ref: '#/components/schemas/UserAccountRoleKeys'
      required:
      - email
      - password
      - roleKeys
    UserAccountDetail:
      type: object
      description: ''
      properties:
        id:
          $ref: '#/components/schemas/UserAccountId'
        email:
          $ref: '#/components/schemas/UserAccountEmail'
        roles:
          $ref: '#/components/schemas/UserAccountRoles'
      required:
      - id
      - email
      - roles
    UserAccountEmail:
      type: string
      format: email
      description: E-mail address of the user
      examples:
      - info@binarybirds.com
    UserAccountId:
      type: string
      description: Unique user account identifier
      examples:
      - P6p5WCctPKqhYKtGMUoTQ
    UserAccountList:
      type: object
      description: User account list
      properties:
        items:
          $ref: '#/components/schemas/UserAccountListItems'
        sort:
          $ref: '#/components/schemas/UserAccountListSort'
        order:
          $ref: '#/components/schemas/FeatherCoreListOrder'
        search:
          $ref: '#/components/schemas/FeatherCoreListSearch'
        page:
          $ref: '#/components/schemas/FeatherCoreListPage'
        count:
          $ref: '#/components/schemas/FeatherCoreListCount'
      required:
      - items
      - page
      - count
    UserAccountListItem:
      type: object
      description: User account list item
      properties:
        id:
          $ref: '#/components/schemas/UserAccountId'
        email:
          $ref: '#/components/schemas/UserAccountEmail'
      required:
      - id
      - email
    UserAccountListItems:
      type: array
      description: User account list items
      items:
        $ref: '#/components/schemas/UserAccountListItem'
      maxItems: 1000
      minItems: 0
    UserAccountListSort:
      type: string
      const: email
      description: The sort key for the list
    UserAccountPassword:
      type: string
      format: password
      description: Password of the user
      examples:
      - ChangeMe1
    UserAccountPatch:
      type: object
      description: ''
      properties:
        email:
          $ref: '#/components/schemas/UserAccountEmail'
        password:
          $ref: '#/components/schemas/UserAccountPassword'
        roleKeys:
          $ref: '#/components/schemas/UserAccountRoleKeys'
    UserAccountReference:
      type: object
      description: ''
      properties:
        id:
          $ref: '#/components/schemas/UserAccountId'
        email:
          $ref: '#/components/schemas/UserAccountEmail'
      required:
      - id
      - email
    UserAccountRoleKeys:
      type: array
      description: User role keys
      items:
        $ref: '#/components/schemas/UserRoleKey'
      maxItems: 1000
      minItems: 0
    UserAccountRoles:
      type: array
      description: User roles
      items:
        $ref: '#/components/schemas/UserRoleReference'
      maxItems: 1000
      minItems: 0
    UserAccountUpdate:
      type: object
      description: ''
      properties:
        email:
          $ref: '#/components/schemas/UserAccountEmail'
        password:
          $ref: '#/components/schemas/UserAccountPassword'
        roleKeys:
          $ref: '#/components/schemas/UserAccountRoleKeys'
      required:
      - email
      - roleKeys
    UserAuthEmail:
      type: string
      format: email
      description: Email address of the user
      examples:
      - info@binarybirds.com
    UserAuthExpiration:
      type: string
      format: date-time
      description: Expiration of the auth token
      examples:
      - '2023-02-10T09:20:15.393Z'
    UserAuthPassword:
      type: string
      format: password
      description: Password of the user
      examples:
      - ChangeMe1
    UserAuthPermissions:
      type: array
      description: ''
      items:
        $ref: '#/components/schemas/SystemPermissionKey'
      maxItems: 1000
      minItems: 0
    UserAuthRequest:
      type: object
      description: User auth request
      properties:
        email:
          $ref: '#/components/schemas/UserAuthEmail'
        password:
          $ref: '#/components/schemas/UserAuthPassword'
      required:
      - email
      - password
    UserAuthResponse:
      type: object
      description: User auth response
      properties:
        account:
          $ref: '#/components/schemas/UserAccountDetail'
        token:
          $ref: '#/components/schemas/UserAuthToken'
        permissions:
          $ref: '#/components/schemas/UserAuthPermissions'
      required:
      - account
      - token
      - permissions
    UserAuthToken:
      type: object
      description: User auth token details
      properties:
        value:
          $ref: '#/components/schemas/UserAuthValue'
        expiration:
          $ref: '#/components/schemas/UserAuthExpiration'
      required:
      - value
      - expiration
    UserAuthValue:
      type: string
      description: User auth token
      examples:
      - pjZwJnl7lFIAkyXsvxlni16VHcdGQKlhd8AMh6wSRCRFyHCQrZpwBWesMdH8jSD6
    UserPasswordEmail:
      type: string
      format: email
      description: Email address of the user
      examples:
      - info@binarybirds.com
    UserPasswordPassword:
      type: string
      format: password
      description: Password of the user
      examples:
      - ChangeMe1
    UserPasswordReset:
      type: object
      description: ''
      properties:
        email:
          $ref: '#/components/schemas/UserPasswordEmail'
      required:
      - email
    UserPasswordSet:
      type: object
      description: ''
      properties:
        password:
          $ref: '#/components/schemas/UserPasswordPassword'
      required:
      - password
    UserPasswordToken:
      type: string
      description: The password reset token
      examples:
      - uuimnfzda8b35r2o1wnadx4hq3p46vzo02u5fx9vitgrmlgbgeasz5d3lvz7d8rq
    UserPushCreate:
      type: object
      description: ''
      properties:
        platform:
          $ref: '#/components/schemas/UserPushPlatform'
        token:
          $ref: '#/components/schemas/UserPushToken'
      required:
      - platform
      - token
    UserPushDetail:
      type: object
      description: ''
      properties:
        id:
          $ref: '#/components/schemas/UserPushId'
        accountId:
          $ref: '#/components/schemas/UserAccountId'
        platform:
          $ref: '#/components/schemas/UserPushPlatform'
        token:
          $ref: '#/components/schemas/UserPushToken'
      required:
      - id
      - accountId
      - platform
      - token
    UserPushId:
      type: string
      format: uuid
      description: Unique user push identifier
      examples:
      - DA679DDA-2A3E-4113-9A3E-E39AA69ADECA
      - 3DF2EFDA-60C9-471E-A452-762CB4686AB3
      - D71D3936-84BF-4513-A105-47DE054C7C99
      - 9613D3A7-2A4C-4741-837D-B978E2AF0D5F
      - 4AC47125-4F48-43FD-80ED-5C1BAAD8EDEC
    UserPushPlatform:
      type: string
      enum:
      - android
      - ios
      description: User device platform type
      examples:
      - ios
    UserPushReference:
      type: object
      description: ''
      properties:
        id:
          $ref: '#/components/schemas/UserPushId'
        token:
          $ref: '#/components/schemas/UserPushToken'
      required:
      - id
      - token
    UserPushToken:
      type: string
      description: Push token value
      examples:
      - pjZwJnl7lFIAkyXsvxlni16VHcdGQKlhd8AMh6wSRCRFyHCQrZpwBWesMdH8jSD6
    UserPushUpdate:
      type: object
      description: ''
      properties:
        token:
          $ref: '#/components/schemas/UserPushToken'
      required:
      - token
    UserRegisterToken:
      type: string
      description: The invitation token
      examples:
      - uuimnfzda8b35r2o1wnadx4hq3p46vzo02u5fx9vitgrmlgbgeasz5d3lvz7d8rq
    UserRoleBulkDelete:
      type: array
      description: The list of the keys to be deleted.
      items:
        $ref: '#/components/schemas/UserRoleKey'
      maxItems: 1000
      minItems: 0
    UserRoleCreate:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/UserRoleKey'
        name:
          $ref: '#/components/schemas/UserRoleName'
        notes:
          $ref: '#/components/schemas/UserRoleNotes'
        permissionKeys:
          $ref: '#/components/schemas/UserRolePermissionKeys'
      required:
      - key
      - name
      - permissionKeys
    UserRoleDetail:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/UserRoleKey'
        name:
          $ref: '#/components/schemas/UserRoleName'
        notes:
          $ref: '#/components/schemas/UserRoleNotes'
        permissions:
          $ref: '#/components/schemas/UserRolePermissions'
      required:
      - key
      - name
      - permissions
    UserRoleKey:
      type: string
      description: Key of the role
      examples:
      - manager
    UserRoleList:
      type: object
      description: Role list
      properties:
        items:
          $ref: '#/components/schemas/UserRoleListItems'
        sort:
          $ref: '#/components/schemas/UserRoleListSort'
        order:
          $ref: '#/components/schemas/FeatherCoreListOrder'
        search:
          $ref: '#/components/schemas/FeatherCoreListSearch'
        page:
          $ref: '#/components/schemas/FeatherCoreListPage'
        count:
          $ref: '#/components/schemas/FeatherCoreListCount'
      required:
      - items
      - page
      - count
    UserRoleListItem:
      type: object
      description: Role list item
      properties:
        key:
          $ref: '#/components/schemas/UserRoleKey'
        name:
          $ref: '#/components/schemas/UserRoleName'
      required:
      - key
      - name
    UserRoleListItems:
      type: array
      description: Role list items
      items:
        $ref: '#/components/schemas/UserRoleListItem'
      maxItems: 1000
      minItems: 0
    UserRoleListSort:
      type: string
      enum:
      - key
      - name
      description: The sort key for the list
    UserRoleName:
      type: string
      description: Name of the role
      examples:
      - Manager
    UserRoleNotes:
      type: string
      description: Description of the role
      examples:
      - Manager role
    UserRolePatch:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/UserRoleKey'
        name:
          $ref: '#/components/schemas/UserRoleName'
        notes:
          $ref: '#/components/schemas/UserRoleNotes'
        permissionKeys:
          $ref: '#/components/schemas/UserRolePermissionKeys'
    UserRolePermissionKeys:
      type: array
      description: System permission keys
      items:
        $ref: '#/components/schemas/SystemPermissionKey'
      maxItems: 1000
      minItems: 0
    UserRolePermissions:
      type: array
      description: System permissions
      items:
        $ref: '#/components/schemas/SystemPermissionReference'
      maxItems: 1000
      minItems: 0
    UserRoleReference:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/UserRoleKey'
        name:
          $ref: '#/components/schemas/UserRoleName'
      required:
      - key
      - name
    UserRoleUpdate:
      type: object
      description: ''
      properties:
        key:
          $ref: '#/components/schemas/UserRoleKey'
        name:
          $ref: '#/components/schemas/UserRoleName'
        notes:
          $ref: '#/components/schemas/UserRoleNotes'
        permissionKeys:
          $ref: '#/components/schemas/UserRolePermissionKeys'
      required:
      - key
      - name
      - permissionKeys
  responses:
    FeatherCoreBadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreBadRequestError'
    FeatherCoreConflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreConflictError'
    FeatherCoreForbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreForbiddenError'
    FeatherCoreGone:
      description: Gone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreGoneError'
    FeatherCoreHead:
      description: Ok
      headers:
        Content-Length:
          $ref: '#/components/headers/Content-Length'
    FeatherCoreInternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreInternalServerErrorError'
    FeatherCoreMethodNotAllowed:
      description: Method not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreMethodNotAllowedError'
    FeatherCoreNoContent:
      description: No content
    FeatherCoreNotAcceptable:
      description: Not acceptable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreNotAcceptableError'
    FeatherCoreNotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreNotFoundError'
    FeatherCoreOk:
      description: ok
    FeatherCoreUnauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreUnauthorizedError'
    FeatherCoreUnprocessableContent:
      description: Unprocessable content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreUnprocessableContentError'
    FeatherCoreUnsupportedMediaType:
      description: Unsupported media type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeatherCoreUnsupportedMediaTypeError'
    SystemPermissionDetail:
      description: System Permission detail object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemPermissionDetail'
    SystemPermissionList:
      description: System Permission list object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemPermissionList'
    SystemVariableDetail:
      description: System variable detail object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemVariableDetail'
    SystemVariableList:
      description: System variable list object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemVariableList'
    UserAccountDetail:
      description: User Account detail object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAccountDetail'
    UserAccountList:
      description: User Account list object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAccountList'
    UserAuthResponse:
      description: Sign in response object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAuthResponse'
    UserPasswordReset:
      description: Initiate a reset password flow
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserPasswordReset'
    UserPasswordSet:
      description: Set new password
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserPasswordSet'
    UserPushCreate:
      description: Create a push token object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserPushCreate'
    UserPushUpdate:
      description: Updates a push token object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserPushUpdate'
    UserRegisterPost:
      description: Register a new user account
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAuthResponse'
    UserRoleDetail:
      description: User Role detail object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRoleDetail'
    UserRoleList:
      description: User Role list object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRoleList'
  parameters:
    FeatherCoreListOrder:
      name: order
      in: query
      schema:
        $ref: '#/components/schemas/FeatherCoreListOrder'
      description: Sort order parameter
    FeatherCoreListPageIndex:
      name: pageIndex
      in: query
      schema:
        $ref: '#/components/schemas/FeatherCoreListPageIndex'
      description: The current page number
    FeatherCoreListPageSize:
      name: pageSize
      in: query
      schema:
        $ref: '#/components/schemas/FeatherCoreListPageSize'
      description: The number of items per page
    FeatherCoreListSearch:
      name: search
      in: query
      schema:
        $ref: '#/components/schemas/FeatherCoreListSearch'
      description: The list search value
    SystemPermissionKey:
      name: permissionKey
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SystemPermissionKey'
      description: System permission key
    SystemPermissionListSort:
      name: sort
      in: query
      schema:
        $ref: '#/components/schemas/SystemPermissionListSort'
      description: Sort by parameter
    SystemVariableKey:
      name: key
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/SystemVariableKey'
      description: System variable key
    SystemVariableListSort:
      name: sort
      in: query
      schema:
        $ref: '#/components/schemas/SystemVariableListSort'
      description: Sort by parameter
    UserAccountId:
      name: accountId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UserAccountId'
      description: User account identifier
    UserAccountListSort:
      name: sort
      in: query
      schema:
        $ref: '#/components/schemas/UserAccountListSort'
      description: Sort by parameter
    UserPasswordToken:
      name: token
      in: query
      schema:
        $ref: '#/components/schemas/UserPasswordToken'
      description: The password reset token
    UserPushId:
      name: pushId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UserPushId'
      description: User push identifier
    UserRegisterToken:
      name: token
      in: query
      schema:
        $ref: '#/components/schemas/UserRegisterToken'
      description: The invitation token
    UserRoleKey:
      name: roleKey
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/UserRoleKey'
      description: User role key
    UserRoleListSort:
      name: sort
      in: query
      schema:
        $ref: '#/components/schemas/UserRoleListSort'
      description: Sort by parameter
  requestBodies:
    SystemPermissionBulkDelete:
      description: Bulk delete request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemPermissionBulkDelete'
      required: true
    SystemPermissionCreate:
      description: Create request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemPermissionCreate'
      required: true
    SystemPermissionPatch:
      description: Patch request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemPermissionPatch'
      required: true
    SystemPermissionUpdate:
      description: Update request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemPermissionUpdate'
      required: true
    SystemVariableBulkDelete:
      description: Bulk delete request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemVariableBulkDelete'
      required: true
    SystemVariableCreate:
      description: Create request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemVariableCreate'
      required: true
    SystemVariablePatch:
      description: Patch request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemVariablePatch'
      required: true
    SystemVariableUpdate:
      description: Update request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemVariableUpdate'
      required: true
    UserAccountBulkDelete:
      description: Bulk delete request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAccountBulkDelete'
      required: true
    UserAccountCreate:
      description: Create request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAccountCreate'
      required: true
    UserAccountPatch:
      description: Patch request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAccountPatch'
      required: true
    UserAccountUpdate:
      description: Update request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAccountUpdate'
      required: true
    UserAuthRequest:
      description: Sign in request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAuthRequest'
      required: true
    UserPasswordReset:
      description: Reset password request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserPasswordReset'
      required: true
    UserPasswordSet:
      description: Set new password request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserPasswordSet'
      required: true
    UserPushCreate:
      description: Create push token request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserPushCreate'
      required: true
    UserPushUpdate:
      description: Update push token request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserPushUpdate'
      required: true
    UserRegisterPost:
      description: Register account request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserAccountCreate'
      required: true
    UserRoleBulkDelete:
      description: Bulk delete request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRoleBulkDelete'
      required: true
    UserRoleCreate:
      description: Create request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRoleCreate'
      required: true
    UserRolePatch:
      description: Patch request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRolePatch'
      required: true
    UserRoleUpdate:
      description: Update request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRoleUpdate'
      required: true
  headers:
    Content-Length:
      schema:
        $ref: '#/components/schemas/FeatherCoreHeadersContentLength'
      description: Content length header
  securitySchemes:
    FeatherCoreBearerToken:
      description: Authorization header using a Bearer token
      type: http
      scheme: bearer
      bearerFormat: token
